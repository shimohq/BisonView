diff --git a/BUILD.gn b/BUILD.gn
index 16ad01eac88d..eda611b4ae7d 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -366,6 +366,7 @@ group("gn_all") {
       "//weblayer/public/java:client_aar",
       "//weblayer/shell/android:weblayer_shell_apk",
       "//weblayer/shell/android:weblayer_support_apk",
+      "//bison",
     ]
     deps -= [
       "//net:net_perftests",
diff --git a/base/i18n/icu_util.cc b/base/i18n/icu_util.cc
index 82022d5f490e..1a4dc2f49381 100644
--- a/base/i18n/icu_util.cc
+++ b/base/i18n/icu_util.cc
@@ -81,7 +81,11 @@ wchar_t g_debug_icu_pf_filename[_MAX_PATH];
 // No need to change the filename in multiple places (gyp files, windows
 // build pkg configurations, etc). 'l' stands for Little Endian.
 // This variable is exported through the header file.
+#if defined(BISON)
+const char kIcuDataFileName[] = "bison/icudtl.dat";
+#else
 const char kIcuDataFileName[] = "icudtl.dat";
+#endif
 const char kIcuExtraDataFileName[] = "icudtl_extra.dat";
 
 // Time zone data loading.
diff --git a/base/threading/thread_restrictions.h b/base/threading/thread_restrictions.h
index 29a68a6b15bf..7b6984aa3e74 100644
--- a/base/threading/thread_restrictions.h
+++ b/base/threading/thread_restrictions.h
@@ -108,6 +108,13 @@ class CookieManager;
 class ScopedAllowInitGLBindings;
 class VizCompositorThreadRunnerWebView;
 }
+
+namespace bison {
+class BisonFormDatabaseService;
+class CookieManager;
+class ScopedAllowInitGLBindings;
+}
+
 namespace audio {
 class OutputDevice;
 }
@@ -371,6 +378,7 @@ class BASE_EXPORT ScopedAllowBlocking {
   friend class AdjustOOMScoreHelper;
   friend class StackSamplingProfiler;
   friend class android_webview::ScopedAllowInitGLBindings;
+  friend class bison::ScopedAllowInitGLBindings;
   friend class blink::DiskDataAllocator;
   friend class chromeos::MojoUtils;  // http://crbug.com/1055467
   friend class content::BrowserProcessSubThread;
@@ -495,6 +503,10 @@ class BASE_EXPORT ScopedAllowBaseSyncPrimitivesOutsideBlockingScope {
       AwFormDatabaseService;  // http://crbug.com/904431
   friend class android_webview::CookieManager;
   friend class android_webview::VizCompositorThreadRunnerWebView;
+  
+  friend class bison::BisonFormDatabaseService;
+  friend class bison::CookieManager;
+
   friend class audio::OutputDevice;
   friend class base::sequence_manager::internal::TaskQueueImpl;
   friend class base::FileDescriptorWatcher;
diff --git a/base/trace_event/builtin_categories.h b/base/trace_event/builtin_categories.h
index 31f563dd4d59..79d3f84669ba 100644
--- a/base/trace_event/builtin_categories.h
+++ b/base/trace_event/builtin_categories.h
@@ -30,6 +30,7 @@
   X("accessibility")                                                     \
   X("AccountFetcherService")                                             \
   X("android_webview")                                                   \
+  X("bison")                                                             \
   X("aogh")                                                              \
   X("audio")                                                             \
   X("base")                                                              \
diff --git a/content/browser/v8_snapshot_files.cc b/content/browser/v8_snapshot_files.cc
index a09a551e6af4..ca2cd0bac030 100644
--- a/content/browser/v8_snapshot_files.cc
+++ b/content/browser/v8_snapshot_files.cc
@@ -19,6 +19,31 @@ std::map<std::string, base::FilePath> GetV8SnapshotFilesToPreload() {
            base::FilePath(FILE_PATH_LITERAL("snapshot_blob.bin"))}};
 #endif
 #elif defined(OS_ANDROID)
+#if defined(BISON)
+#if defined(USE_V8_CONTEXT_SNAPSHOT)
+  return {
+      {kV8Snapshot64DataDescriptor,
+       base::FilePath(FILE_PATH_LITERAL("assets/v8_context_snapshot_64.bin"))},
+      {kV8Snapshot32DataDescriptor,
+       base::FilePath(FILE_PATH_LITERAL("assets/v8_context_snapshot_32.bin"))}};
+#else
+#if defined(ARCH_CPU_ARM_FAMILY)
+  return {{kV8Snapshot64DataDescriptor,
+           base::FilePath(
+               FILE_PATH_LITERAL("assets/bison/arm/snapshot_blob_64.bin"))},
+          {kV8Snapshot32DataDescriptor,
+           base::FilePath(
+               FILE_PATH_LITERAL("assets/bison/arm/snapshot_blob_32.bin"))}};
+#else   // ARCH_CPU_X86_FAMILY
+  return {{kV8Snapshot64DataDescriptor,
+           base::FilePath(
+               FILE_PATH_LITERAL("assets/bison/x86/snapshot_blob_64.bin"))},
+          {kV8Snapshot32DataDescriptor,
+           base::FilePath(
+               FILE_PATH_LITERAL("assets/bison/x86/snapshot_blob_32.bin"))}};
+#endif  // defined(ARCH_CPU_ARM_FAMILY)
+#endif
+#else
 #if defined(USE_V8_CONTEXT_SNAPSHOT)
   return {
       {kV8Snapshot64DataDescriptor,
@@ -31,6 +56,7 @@ std::map<std::string, base::FilePath> GetV8SnapshotFilesToPreload() {
           {kV8Snapshot32DataDescriptor,
            base::FilePath(FILE_PATH_LITERAL("assets/snapshot_blob_32.bin"))}};
 #endif
+#endif
 #else
   return {};
 #endif
diff --git a/ipc/ipc_message_start.h b/ipc/ipc_message_start.h
index 4464f1e4bb3b..93b9e33d724a 100644
--- a/ipc/ipc_message_start.h
+++ b/ipc/ipc_message_start.h
@@ -44,6 +44,7 @@ enum IPCMessageStart {
   ExtensionWorkerMsgStart,
   SubresourceFilterMsgStart,
   UnfreezableFrameMsgStart,
+  BisonViewMsgStart,
   LastIPCMsgStart  // Must come last.
 };
 
diff --git a/tools/gritsettings/resource_ids.spec b/tools/gritsettings/resource_ids.spec
index fa2306ead7d2..eb3d1e80ef63 100644
--- a/tools/gritsettings/resource_ids.spec
+++ b/tools/gritsettings/resource_ids.spec
@@ -648,7 +648,9 @@
     "META": {"sizes": {"includes": [50],}},
     "includes": [3880],
   },
-
+  "bison/bison_resources.grd": {
+    "includes": [5000],
+  },
   # END "everything else" section.
   # Everything but chrome/, components/, content/, and ios/
 
diff --git a/tools/gritsettings/translation_expectations.pyl b/tools/gritsettings/translation_expectations.pyl
index b2598b2b057e..4014c2917a13 100644
--- a/tools/gritsettings/translation_expectations.pyl
+++ b/tools/gritsettings/translation_expectations.pyl
@@ -24,6 +24,7 @@
     "files": [
       "android_webview/java/strings/android_webview_strings.grd",
       "android_webview/ui/aw_strings.grd",
+      # "bison/",
       "ash/ash_strings.grd",
       "ash/shortcut_viewer/shortcut_viewer_strings.grd",
       "chrome/android/features/vr/java/strings/android_chrome_vr_strings.grd",
