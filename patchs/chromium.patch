diff --git a/BUILD.gn b/BUILD.gn
index 16ad01eac88d3..bd56fd4d28dd7 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -366,6 +366,9 @@ group("gn_all") {
       "//weblayer/public/java:client_aar",
       "//weblayer/shell/android:weblayer_shell_apk",
       "//weblayer/shell/android:weblayer_support_apk",
+      "//bison",
+      "//bison/shell",
+      "//bison/test",
     ]
     deps -= [
       "//net:net_perftests",
diff --git a/base/i18n/icu_util.cc b/base/i18n/icu_util.cc
index 82022d5f490e8..cb941a346a156 100644
--- a/base/i18n/icu_util.cc
+++ b/base/i18n/icu_util.cc
@@ -107,7 +107,7 @@ const char kIcuTimeZoneDataDir[] = "/config/data/tzdata/icu/44/le";
 #endif  // defined(OS_FUCHSIA)
 
 #if defined(OS_ANDROID)
-const char kAssetsPathPrefix[] = "assets/";
+const char kAssetsPathPrefix[] = "assets/bison/";
 #endif  // defined(OS_ANDROID)
 
 // File handle intentionally never closed. Not using File here because its
diff --git a/base/threading/thread_restrictions.h b/base/threading/thread_restrictions.h
index 29a68a6b15bf1..1fa05cbbafb4c 100644
--- a/base/threading/thread_restrictions.h
+++ b/base/threading/thread_restrictions.h
@@ -108,6 +108,13 @@ class CookieManager;
 class ScopedAllowInitGLBindings;
 class VizCompositorThreadRunnerWebView;
 }
+
+namespace bison {
+class BvFormDatabaseService;
+class CookieManager;
+class ScopedAllowInitGLBindings;
+}
+
 namespace audio {
 class OutputDevice;
 }
@@ -371,6 +378,7 @@ class BASE_EXPORT ScopedAllowBlocking {
   friend class AdjustOOMScoreHelper;
   friend class StackSamplingProfiler;
   friend class android_webview::ScopedAllowInitGLBindings;
+  friend class bison::ScopedAllowInitGLBindings;
   friend class blink::DiskDataAllocator;
   friend class chromeos::MojoUtils;  // http://crbug.com/1055467
   friend class content::BrowserProcessSubThread;
@@ -495,6 +503,10 @@ class BASE_EXPORT ScopedAllowBaseSyncPrimitivesOutsideBlockingScope {
       AwFormDatabaseService;  // http://crbug.com/904431
   friend class android_webview::CookieManager;
   friend class android_webview::VizCompositorThreadRunnerWebView;
+
+  friend class bison::BvFormDatabaseService;
+  friend class bison::CookieManager;
+
   friend class audio::OutputDevice;
   friend class base::sequence_manager::internal::TaskQueueImpl;
   friend class base::FileDescriptorWatcher;
diff --git a/base/trace_event/builtin_categories.h b/base/trace_event/builtin_categories.h
index 31f563dd4d59c..79d3f84669bad 100644
--- a/base/trace_event/builtin_categories.h
+++ b/base/trace_event/builtin_categories.h
@@ -30,6 +30,7 @@
   X("accessibility")                                                     \
   X("AccountFetcherService")                                             \
   X("android_webview")                                                   \
+  X("bison")                                                             \
   X("aogh")                                                              \
   X("audio")                                                             \
   X("base")                                                              \
diff --git a/content/browser/v8_snapshot_files.cc b/content/browser/v8_snapshot_files.cc
index a09a551e6af44..af7ac2f836341 100644
--- a/content/browser/v8_snapshot_files.cc
+++ b/content/browser/v8_snapshot_files.cc
@@ -26,10 +26,17 @@ std::map<std::string, base::FilePath> GetV8SnapshotFilesToPreload() {
       {kV8Snapshot32DataDescriptor,
        base::FilePath(FILE_PATH_LITERAL("assets/v8_context_snapshot_32.bin"))}};
 #else
+#if defined(ARCH_CPU_ARM_FAMILY)
   return {{kV8Snapshot64DataDescriptor,
-           base::FilePath(FILE_PATH_LITERAL("assets/snapshot_blob_64.bin"))},
+           base::FilePath(FILE_PATH_LITERAL("assets/bison/arm/snapshot_blob_64.bin"))},
           {kV8Snapshot32DataDescriptor,
-           base::FilePath(FILE_PATH_LITERAL("assets/snapshot_blob_32.bin"))}};
+           base::FilePath(FILE_PATH_LITERAL("assets/bison/arm/snapshot_blob_32.bin"))}};
+#else   // ARCH_CPU_X86_FAMILY
+  return {{kV8Snapshot64DataDescriptor,
+           base::FilePath(FILE_PATH_LITERAL("assets/bison/x86/snapshot_blob_64.bin"))},
+          {kV8Snapshot32DataDescriptor,
+           base::FilePath(FILE_PATH_LITERAL("assets/bison/x86/snapshot_blob_32.bin"))}};
+#endif  // defined(ARCH_CPU_ARM_FAMILY)
 #endif
 #else
   return {};
diff --git a/ipc/ipc_message_start.h b/ipc/ipc_message_start.h
index 4464f1e4bb3b2..93b9e33d724a2 100644
--- a/ipc/ipc_message_start.h
+++ b/ipc/ipc_message_start.h
@@ -44,6 +44,7 @@ enum IPCMessageStart {
   ExtensionWorkerMsgStart,
   SubresourceFilterMsgStart,
   UnfreezableFrameMsgStart,
+  BisonViewMsgStart,
   LastIPCMsgStart  // Must come last.
 };
 
diff --git a/tools/gritsettings/resource_ids.spec b/tools/gritsettings/resource_ids.spec
index fa2306ead7d2b..3accd22f23122 100644
--- a/tools/gritsettings/resource_ids.spec
+++ b/tools/gritsettings/resource_ids.spec
@@ -504,7 +504,7 @@
   "android_webview/ui/aw_strings.grd": {
     "messages": [3020],
   },
-
+  
   "ash/app_list/resources/app_list_resources.grd": {
     "structures": [3040],
   },
@@ -648,7 +648,9 @@
     "META": {"sizes": {"includes": [50],}},
     "includes": [3880],
   },
-
+  "bison/bison_resources.grd": {
+    "includes": [5000],
+  },
   # END "everything else" section.
   # Everything but chrome/, components/, content/, and ios/
 
diff --git a/ui/base/resource/resource_bundle_android.cc b/ui/base/resource/resource_bundle_android.cc
index e8cf7b78c6632..bc9cf1d6f1ba4 100644
--- a/ui/base/resource/resource_bundle_android.cc
+++ b/ui/base/resource/resource_bundle_android.cc
@@ -88,7 +88,7 @@ void ResourceBundle::LoadCommonResources() {
   base::PathService::Get(ui::DIR_RESOURCE_PAKS_ANDROID, &disk_path);
   disk_path = disk_path.AppendASCII("chrome_100_percent.pak");
   bool success =
-      LoadFromApkOrFile("assets/chrome_100_percent.pak", &disk_path,
+      LoadFromApkOrFile("assets/bison/chrome_100_percent.pak", &disk_path,
                         &g_chrome_100_percent_fd, &g_chrome_100_percent_region);
   DCHECK(success);
 
@@ -228,6 +228,7 @@ void SetLoadSecondaryLocalePaks(bool value) {
 
 void LoadMainAndroidPackFile(const char* path_within_apk,
                              const base::FilePath& disk_file_path) {
+  VLOG(0) << "path_within_apk:" << path_within_apk;
   if (LoadFromApkOrFile(path_within_apk,
                         &disk_file_path,
                         &g_resources_pack_fd,
