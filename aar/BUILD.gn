import("//bison/aar/aar.gni")
import("//bison/config.gni")
import("//build/config/android/config.gni")
import("//build/config/android/rules.gni")

import("//third_party/icu/config.gni")
import("//tools/v8_context_snapshot/v8_context_snapshot.gni")


_jar_excluded_patterns = [
  # Excludes Android support libraries crbug.com/832770.
  "android/*",
  "*/library_loader/*.class",
  "*/multidex/*.class",
  "*/process_launcher/*.class",
  "*/SysUtils*.class",
  "*/CachedMetrics*.class",
  "org/chromium/base/memory/MemoryPressureMonitor*.class",
]

bison_aar_manifest_xml =
    "$target_gen_dir/bison_aar_manifest/AndroidManifest.xml"

android_aar("bison_view_aar") {
  android_manifest = bison_aar_manifest_xml
  output = "$root_build_dir/aars/bison_view.aar"

  deps = [
    ":bison_aar_manifest",
    ":package_impl_native_java",
    #":bison_aar_assets"
  ]

  #bison_jni_registration_java

  shared_libraries = [ ":libbison_view" ]

  resource_included_patterns = [
    "*/bison/*",
    "*/ui/android/*",
  ]

  jar_excluded_patterns = [
    "im/shimo/bison/R\$*.class",
    "im/shimo/bison/R.class",

    "javax/*",
    "android/*",
    "androidx/*",
    "com/google/*",
    "META-INF/*",
    "*.stamp",
    "*/.readme",
    "*/*.properties",

    # "im/shimo/bison/BisonView.class",
    # "im/shimo/bison/BisonView\$*.class",
  ]
}

jinja_template("bison_aar_manifest") {
  input = "AndroidManifest.xml.jinja2"
  output = bison_aar_manifest_xml
}

shared_library("libbison_view") {
  sources = [
    "lib/bison_main_delegate.cc",
    "lib/bison_main_delegate.h",
    "lib/bison_view_library_loader.cc",
  ]

  deps = [
    ":bison_jni_registration",
    "//base",
    "//bison:bison_lib",
    "//components/crash/content/app",
    "//components/crash/content/browser",
    # "//components/embedder_support/android:view",
    "//components/keyed_service/content",
    "//content/public/app:both",
    "//content/public/browser",
    "//content/public/renderer",
    "//ui/gfx",
  ]
  ldflags = [ "-Wl,-shared,-Bsymbolic" ]
  configs -= [ "//build/config/android:hide_all_but_jni_onload" ]
  configs += [ "//build/config/android:hide_all_but_jni" ]
}

_package_dir = "$root_out_dir/bison_view_aar"

# android_library("bison_view_aar_java") {
#   ##srcjar_deps = [ ":bison_jni_registration" ]

#   deps  = [
#     ":package_impl_native_java",
#   ]
# }

java_prebuilt("package_impl_native_java") {
  jar_path = "$_package_dir/impl_native_java.jar"
  supports_android = true
  requires_android = true
  deps = bison_java_deps + [ ":repackage_native" ]
}

_registration_header = "$target_gen_dir/bison_jni_registration.h"

# TODO 差重定义shared_library
generate_jni_registration("bison_jni_registration") {
  target = "//bison:bison_java"
  header_output = _registration_header
}

android_library("bison_jni_registration_java") {
  srcjar_deps = [ ":bison_jni_registration" ]
}

repackage_jars("repackage_native") {
  output = "$_package_dir/impl_native_java.jar"
  deps = [
    ":bison_jni_registration_java",
    ":repackage_native_java",
  ]

  jar_excluded_patterns = _jar_excluded_patterns
}

_native_intermediate_jar_path = "$target_out_dir/repackage_native_impl.jar"

android_java_prebuilt("repackage_native_java") {
  jar_path = _native_intermediate_jar_path

  enable_bytecode_rewriter = false
  deps = bison_java_deps + [ ":repackage_native_impl" ]
}

repackage_jars("repackage_native_impl") {
  output = _native_intermediate_jar_path

  # requires_android = true
  # use_unprocessed_jars = true
  # no_build_hooks = true
  deps = [
    "//bison:bison_java",
  ]

  jar_excluded_patterns = _jar_excluded_patterns
}


android_assets("bison_aar_assets") {
  sources = [
    "$root_out_dir/bison.pak",
  ]
  disable_compression = true
  deps = [
    "//bison:pak",
    "//third_party/icu:icu_assets",
  ]
  if (use_v8_context_snapshot) {
    deps += [ "//tools/v8_context_snapshot:v8_context_snapshot_assets" ]
  } else {
    deps += [ "//v8:v8_external_startup_data_assets" ]
  }
}
